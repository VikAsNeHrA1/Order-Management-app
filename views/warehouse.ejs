<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Current Orders</title>
    <style>
        /* Reset some default styles to ensure consistency */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  /* Body styles */
  body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    margin: 0;
    padding: 0;
  }
  
  /* Header styles */
  header {
    background-color: #007bff;
    color: #fff;
    text-align: center;
    padding: 20px 0;
  }
  
  h1 {
    font-size: 24px;
  }
  
  /* Main content styles */
  main {
    max-width: 800px;
    margin: 20px auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  
  /* Table styles */
  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
  }
  
  table, th, td {
    border: 1px solid #ccc;
  }
  
  th, td {
    padding: 10px;
    text-align: left;
  }
  
  th {
    background-color: #333;
    color: #fff;
  }
  
  /* Links styles */
  a {
    text-decoration: none;
    color: #007bff;
    transition: color 0.2s;
  }
  
  a:hover {
    color: #0056b3;
  }
  
  /* Button styles */
  .button {
    display: inline-block;
    padding: 10px 20px;
    background-color: #007bff;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.2s;
  }
  
  .button:hover {
    background-color: #0056b3;
  }
  
    </style>
</head>
<body>
    <header>
        <h1>Current Orders</h1>
    </header>
    
    <main>
        <table>
            <thead>
                <tr>
                    <th>Store Name</th>
                    <th>Order List</th>
                    <th>Action</th>
                    <th>Status</th>
                </tr>
                
            </thead>
            <tbody>
                <% orders.forEach(order => { %>
                    <tr>
                        <td><%= order.storeName %></td>
                        <td><%= order.orderList %></td>
                        <td>
                          <button onclick="printOrder('<%= order.storeName %>', '<%= order.orderList %>')">Print</button> |
                          <form action="/orders/delete/<%= order._id %>" method="post" style="display:inline;">
                              <button type="submit">Delete</button>
                          </form>

                          <!-- <form action="/send-order-status/<%= order._id %>" method="post" style="display:inline;">
                            <button type="submit">Send Order Status</button>
                        </form> -->
                        


                      </td>

                      <td>
                        <select onchange="updateOrderStatus('<%= order._id %>', this.value)">
                            <option value="New" <%= order.status === "New" ? 'selected' : '' %>>New</option>
                            <option value="In Progress" <%= order.status === "In Progress" ? 'selected' : '' %>>In Progress</option>
                        </select>
                    </td>
                      
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </main>

    <footer>
       
    </footer>
   <script>

     function printOrder(storeName, orderList) {
      const printWindow = window.open('', '_blank');
      printWindow.document.write('<html><head><title>Print Order</title></head><body>');
      printWindow.document.write('<h1>Order for ' + storeName + '</h1>');
      printWindow.document.write('<p>' + orderList + '</p>');
      printWindow.document.write('</body></html>');
      printWindow.document.close();
      printWindow.print();

      function updateOrderStatus(orderId, newStatus) {
    fetch(`/orders/update/${orderId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ status: newStatus })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        if (!data.success) {
            alert('Error updating order status');
        }
        // Optionally, you can refresh the page to reflect the changes
        location.reload();
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

  }


   </script>
  


</body>
</html>
