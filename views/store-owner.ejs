<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>101 Distributors</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" rel="stylesheet">
    <style>
        /* CSS */
        body {
            font-family: 'Open Sans', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #333;
            color: white;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        .main-content {
            background-color: #333;
            padding: 20px 0;
            flex: 1 0 auto;
        }

        .logo {
            font-size: 24px;
            font-weight: bold;
            margin-right: 30px;
        }

        nav ul {
            list-style-type: none;
            padding: 0;
            display: flex;
            align-items: center;
        }

        nav li {
            margin: 0 15px;
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 450px;
        }

        nav a {
            color: white;
            text-decoration: none;
            font-weight: bold;
        }

        main {
            display: flex;
            flex-direction: column;
            align-items: center;
            height: calc(100vh - 100px);
        }

        button {
            background-color: teal;
            color: white;
            padding: 15px 25px;
            border: none;
            border-radius: 30px;
            cursor: pointer;
            font-size: 18px;
            font-weight: bold;
            margin: 0 auto; /* Center the button */
            display: block;
        }

        .social-icon {
            margin: 0 10px;
            font-size: 24px;
            color: white;
            text-decoration: none;
        }

        /* From the reference to maintain consistency */
        input[type="text"],
        textarea {
            background-color: #3b4148;
            padding: 16px;
            width: 100%;
            border: none;
            color: #eee;
        }

        input[type="text"]:focus,
        textarea:focus {
            background-color: #434a52;
        }

        .btn-primary {
            background-color: #ea4c88;
            color: #eee;
        }

        .btn-primary:hover {
            background-color: #d44179;
        }

        label {
            color: #eee;
        }

        form {
            width: 100%;
            max-width: 320px;
        }
        footer {
    flex-shrink: 0; 
    text-align: center; 
}

#footer-image {
    max-width: 100%; 
    height: auto;
}

/* CSS for formatting the table like a shopping bag */
#items-table {
    background-color: inherit; /* Keep the background color the same as the body */
    border: 2px solid #ccc;
    border-radius: 10px;
    padding: 20px;
    width: 100%;
}

#items-table th {
    background-color: #333;
    color: white;
    padding: 10px;
    border-radius: 5px 5px 0 0;
}

#items-table td {
    padding: 10px;
}

#items-container {
    background-color: inherit; /* Keep the background color the same as the body */
    border: 2px solid #ccc;
    border-radius: 5px;
    margin-top: 10px;
}

/* Increase spacing between buttons */
#addNewBtn {
    margin-bottom: 20px;
}

/* Additional styling for the "Send Order" button */
#sendOrderBtn {
    margin-top: 20px;
    background-color: teal;
    color: white;
    border: none;
    border-radius: 30px;
    cursor: pointer;
    font-size: 18px;
    font-weight: bold;
    padding: 15px 25px;
    width: 100%;
}

.mb-3 {
            margin-bottom: 15px;
        }

        /* Increase area for item name */
        .form-control.item-name {
            width: 70%;
        }

        /* Reduce size of input quantity */
        .form-control.item-quantity {
            width: 30%;
        }

        /* Add space between "Add New Item" button */
        #addNewBtn {
            margin-top: 10px;
            margin-bottom: 10px;
        }

        /* Add space between "Add New Item" button and "Send Order" button */
        #addNewBtn + .text-center {
            margin-top: 10px;
        }



    </style>
</head>

<body>
    
    <header>
        <nav>
            <div class="logo"><img src="https://www.101distributorsga.com/images/header/logo.png" alt=""></div>
            <ul>
                <li><a href="#">Home</a></li>
                <li><a href="#">Gallery</a></li>
                <li><a href="#">About us</a></li>
                <li><a href="#">Contact</a></li>
            </ul>
        </nav>
    </header>
    <div class="main-content">
        <main>
            <h1>Welcome to 101 Distributors</h1>
            <button>Contact us</button>
            <div class="container mt-5">

                <div class="my-5">
                    <h3>Add a New Order</h3>
                    <form id="addOrderForm" action="/orders/add" method="post">
                        
                        <div class="mb-3">
                            <label for="storeName" class="form-label">Store Name:</label>
                            <input type="text" class="form-control" id="storeName" name="storeName" required>
                        </div>
                        
                        <table class="table" id="items-table">
                            <thead>
                                <tr>
                                    <th>Item-Name</th>
                                    <th>Quantity</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="items-container">
                                <!-- This will hold individual item rows -->
                            </tbody>
                        </table>
                        <button type="button" onclick="addItem()" class="btn btn-primary mb-3" id="addNewBtn">Add New Item</button>
                        
                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary" id="sendOrderBtn">Send Order</button>
                        </div>
                    </form>
                </div>
                
                    </form>
                </div>
            </div>
        </main>
    </div>
    <footer>
        <img src="https://github.com/VikAsNeHrA1/Order-Management-app/blob/main/views/footer.png?raw=true" alt="Footer Image" id="footer-image">
    </footer>
    
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <!-- JavaScript to handle form submission and modal -->
    <script>

function addItem() {
        // Create new item row
        const itemDiv = document.createElement('div');
        itemDiv.classList.add('item-row', 'mb-3');

        // Create input for item name
        const itemNameInput = document.createElement('input');
        itemNameInput.type = "text";
        itemNameInput.name = "itemName[]";
        itemNameInput.placeholder = "Item Name";
        itemNameInput.classList.add('form-control', 'mr-2');

        // Create input for item quantity
        const itemQuantityInput = document.createElement('input');
        itemQuantityInput.type = "number";
        itemQuantityInput.name = "itemQuantity[]";
        itemQuantityInput.placeholder = "Quantity";
        itemQuantityInput.classList.add('form-control', 'mr-2');

        // Create remove button
        const removeButton = document.createElement('button');
        removeButton.type = "button";
        removeButton.innerHTML = "Remove";
        removeButton.onclick = function() { 
            this.parentElement.remove();
        }
        removeButton.classList.add('btn', 'btn-danger');

        // Append inputs and button to itemDiv
        itemDiv.appendChild(itemNameInput);
        itemDiv.appendChild(itemQuantityInput);
        itemDiv.appendChild(removeButton);

        // Append itemDiv to items-container
        document.getElementById('items-container').appendChild(itemDiv);
    }

    // Add the first item row by default
    function addItem() {
    // Create a new table row
    const itemRow = document.createElement('tr');

    // Create input for item name
    const itemNameTd = document.createElement('td');
    const itemNameInput = document.createElement('input');
    itemNameInput.type = "text";
    itemNameInput.name = "itemName[]";
    itemNameInput.placeholder = "Item Name";
    itemNameInput.classList.add('form-control');
    itemNameTd.appendChild(itemNameInput);

    // Create input for item quantity
    const itemQuantityTd = document.createElement('td');
    const itemQuantityInput = document.createElement('input');
    itemQuantityInput.type = "number";
    itemQuantityInput.name = "itemQuantity[]";
    itemQuantityInput.placeholder = "Quantity";
    itemQuantityInput.classList.add('form-control');
    itemQuantityTd.appendChild(itemQuantityInput);

    // Create remove button
    const actionsTd = document.createElement('td');
    const removeButton = document.createElement('button');
    removeButton.type = "button";
    removeButton.innerHTML = "Remove";
    removeButton.onclick = function() { 
        this.parentElement.parentElement.remove();
    }
    removeButton.classList.add('btn', 'btn-danger');
    actionsTd.appendChild(removeButton);

    // Append inputs and button to itemRow
    itemRow.appendChild(itemNameTd);
    itemRow.appendChild(itemQuantityTd);
    itemRow.appendChild(actionsTd);

    // Append itemRow to items-container
    document.getElementById('items-container').appendChild(itemRow);
}

// Add the first item row by default
addItem();



document.getElementById('addOrderForm').addEventListener('submit', function(event) {
    event.preventDefault();

    // Get store name value
    const storeName = document.getElementById('storeName').value;

    // Get dynamic item names and quantities
    const itemNames = Array.from(document.querySelectorAll('input[name="itemName[]"]')).map(input => input.value);
    const itemQuantities = Array.from(document.querySelectorAll('input[name="itemQuantity[]"]')).map(input => input.value);

    // Build orderList array
    const orderList = [];
    for (let i = 0; i < itemNames.length; i++) {
        const itemName = itemNames[i];
        const itemQuantity = itemQuantities[i];
        orderList.push({ itemName, itemQuantity });
    }

    // Create formData object
    const formData = {
        storeName: storeName,
        orderList: orderList, // Send orderList as an array of objects
    };

    fetch('/orders/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            window.location.href = '/order-success';
        } else {
            alert('Error: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
});

    </script>
    
</body>

</html>
